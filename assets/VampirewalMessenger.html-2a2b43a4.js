import{_ as t,W as c,X as p,Z as n,$ as s,a0 as e,a1 as o,C as i}from"./framework-b2028a60.js";const l={},r={class:"hint-container tip"},u=n("p",{class:"hint-container-title"},"代码来源",-1),d=n("li",null,"此处代码引用自 若汝棋茗",-1),k={href:"https://blog.csdn.net/qq_40374647?type=blog",target:"_blank",rel:"noopener noreferrer"},m={href:"https://space.bilibili.com/94253567",target:"_blank",rel:"noopener noreferrer"},h=n("li",null,"交流QQ群：234762506",-1),v=o(`<h1 id="_1、如何使用" tabindex="-1"><a class="header-anchor" href="#_1、如何使用" aria-hidden="true">#</a> 1、如何使用</h1><h2 id="_1-1、注册方法" tabindex="-1"><a class="header-anchor" href="#_1-1、注册方法" aria-hidden="true">#</a> 1.1、注册方法</h2><h3 id="_1-1-1、viewmodel中注册" tabindex="-1"><a class="header-anchor" href="#_1-1-1、viewmodel中注册" aria-hidden="true">#</a> 1.1.1、ViewModel中注册</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>   <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MessengerRegister</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   <span class="token punctuation">{</span>
       VampirewalMessenger<span class="token punctuation">.</span><span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Register</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&quot;TestMessenger&quot;</span><span class="token punctuation">,</span> TestMessenger<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-1-2、单独类中注册" tabindex="-1"><a class="header-anchor" href="#_1-1-2、单独类中注册" aria-hidden="true">#</a> 1.1.2、单独类中注册</h3><div class="hint-container tip"><p class="hint-container-title">注意事项</p><ul><li>实现一个空接口IVampirewalMessageManager</li><li>在需要注册的方法上，打上[RegistMethod]特性</li></ul></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 测试统一注册消息</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestMessenger</span><span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IVampirewalMessageManager</span></span>
<span class="token punctuation">{</span>

   <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">RegistMethod</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;TestAAA&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
   <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TestAAA</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   <span class="token punctuation">{</span>

   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-2、使用方法" tabindex="-1"><a class="header-anchor" href="#_1-2、使用方法" aria-hidden="true">#</a> 1.2、使用方法</h2><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>VampirewalMessenger<span class="token punctuation">.</span><span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span><span class="token string">&quot;TestAAA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9);function g(b,_){const a=i("ExternalLinkIcon");return c(),p("div",null,[n("div",r,[u,n("ul",null,[d,n("li",null,[s("CSDN博客："),n("a",k,[s("https://blog.csdn.net/qq_40374647?type=blog"),e(a)])]),n("li",null,[s("哔哩哔哩视频："),n("a",m,[s("https://space.bilibili.com/94253567"),e(a)])]),h])]),v])}const w=t(l,[["render",g],["__file","VampirewalMessenger.html.vue"]]);export{w as default};
