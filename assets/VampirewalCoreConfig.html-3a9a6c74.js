import{_ as a,W as e,X as t,Z as n,$ as s,a1 as p}from"./framework-b2028a60.js";const o={},c=n("h1",{id:"直接使用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#直接使用","aria-hidden":"true"},"#"),s(" 直接使用")],-1),i=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"注册"),n("ul",null,[n("li",null,"位于Vampirewal.Core.Extensions命名空间下"),n("li",null,"该组件的注册，一般是放在ViewModel中的BootStartUp类中"),n("li",null,"在重写RegisterService方法的时候，第一个使用")]),n("div",{class:"language-csharp line-numbers-mode","data-ext":"cs"},[n("pre",{cs:"",class:"language-csharp"},[n("code",null,[s("services"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddVampirewalCoreConfig"),n("span",{class:"token punctuation"},"("),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[s("AppDomain"),n("span",{class:"token punctuation"},"."),s("CurrentDomain"),n("span",{class:"token punctuation"},"."),s("BaseDirectory")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'AppConfig.json"')]),n("span",{class:"token punctuation"},","),s(" options "),n("span",{class:"token operator"},"=>"),s(`
    `),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"//options.RegisterOptions<AppBaseOptions>();"),s(`
        `),n("span",{class:"token comment"},"//options.RegisterOptions<DbBaseOptions>();//(数据库基础配置)"),s(`
        `),n("span",{class:"token comment"},"//options.RegisterOptions<PagingOptions>();//(分页配置)"),s(`
        `),n("span",{class:"token comment"},"//以上是举例方式，实际框架已内置AppBaseOptions(程序基础信息配置)"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])])],-1),l=p(`<div class="hint-container tip"><p class="hint-container-title">如何使用</p><p>第一种用法：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> AppBaseInfo <span class="token operator">=</span> VampirewalCoreContext<span class="token punctuation">.</span><span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetOptions</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>AppBaseOptions<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第二种用法：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> AppName<span class="token operator">=</span> VampirewalCoreContext<span class="token punctuation">.</span><span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetOptionsValue</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;AppBaseOptions:AppChineseName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在需要的地方，直接通过这2种方式，就可以获取到配置内容</p></div><hr><h2 id="新增配置文件" tabindex="-1"><a class="header-anchor" href="#新增配置文件" aria-hidden="true">#</a> 新增配置文件</h2><p>1、在一个你喜欢的地方，新增一个类叫Options</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">//继承一个空接口IOptions</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomOption</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IOptions</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsAdmin <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、在上文的<kbd>services.AddVampirewalCoreConfig</kbd>中注册该配置项</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>options<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">RegisterOptions</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>CustomOption<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3、后续如果项目不存在AppConfig.json文件夹，框架在第一次读取的时候会自动创建，需要手动将框架新增的AppConfig.json的属性修改成&quot;内容&quot;，并改为“如果较新则复制&quot;</p><h2 id="修改-保存" tabindex="-1"><a class="header-anchor" href="#修改-保存" aria-hidden="true">#</a> 修改/保存</h2><div class="hint-container tip"><p class="hint-container-title">保存单个配置</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> config <span class="token operator">=</span> VampirewalCoreContext<span class="token punctuation">.</span><span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetOptions</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>AppBaseOptions<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

config<span class="token punctuation">.</span>AppChineseName <span class="token operator">=</span> <span class="token string">&quot;测试名称&quot;</span><span class="token punctuation">;</span>

VampirewalCoreContext<span class="token punctuation">.</span><span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SetOptions</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="hint-container tip"><p class="hint-container-title">完整保存配置</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>VampirewalCoreContext<span class="token punctuation">.</span><span class="token function">GetInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SaveConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div>`,11),u=[c,i,l];function r(d,k){return e(),t("div",null,u)}const v=a(o,[["render",r],["__file","VampirewalCoreConfig.html.vue"]]);export{v as default};
