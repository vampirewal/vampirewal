import{_ as t,W as p,X as e,Z as n,$ as s,a0 as c,a1 as o,C as l}from"./framework-b2028a60.js";const i={},u=n("p",null,[s("@"),n("a",{href:"C#%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84EventBus%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BA%BF"},"TOC")],-1),k={href:"https://gitee.com/vampirewal/Vampirewal.Admin",target:"_blank",rel:"noopener noreferrer"},r=o(`<h1 id="关于事件总线eventbus" tabindex="-1"><a class="header-anchor" href="#关于事件总线eventbus" aria-hidden="true">#</a> 关于事件总线EventBus</h1><p>网上关于这块的内容太多了，我就不再重复赘述，如需了解详细，请自行搜索一下其他博客的内容。</p><h1 id="进入正文" tabindex="-1"><a class="header-anchor" href="#进入正文" aria-hidden="true">#</a> 进入正文</h1><h1 id="_1、代码" tabindex="-1"><a class="header-anchor" href="#_1、代码" aria-hidden="true">#</a> 1、代码</h1><p>直接放出全部代码</p><table><thead><tr><th>文件名称</th><th>功能描述</th></tr></thead><tbody><tr><td>IVampirewalCoreEventBusFactory</td><td>VampirewalCore事件总线工厂接口</td></tr><tr><td>VampirewalCoreEventBusFactory</td><td>VampirewalCore事件总线工厂接口实现</td></tr><tr><td>IVampirewalCoreEventFactory</td><td>事件工厂接口</td></tr><tr><td>EventFactoryContext</td><td>事件工厂上下文</td></tr><tr><td>EventContext</td><td>事件上下文</td></tr><tr><td>VampirewalCoreEventBusException</td><td>VampirewalCore事件总线异常类</td></tr><tr><td>EventBusExcuteAttribute</td><td>标记在事件总线中的方法才会执行</td></tr><tr><td>EventBusAOPAttribute</td><td>事件工厂AOP特性，需继承</td></tr><tr><td>VampirewalCoreEventBusExtension</td><td>扩展方法</td></tr></tbody></table><h2 id="_1-1、vampirewalcore事件总线工厂接口" tabindex="-1"><a class="header-anchor" href="#_1-1、vampirewalcore事件总线工厂接口" aria-hidden="true">#</a> 1.1、VampirewalCore事件总线工厂接口</h2><details class="hint-container details"><summary>VampirewalCore事件总线工厂接口</summary><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// VampirewalCore事件总线工厂接口</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IVampirewalCoreEventBusFactory</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 推送</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>EventFactoryName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>事件工厂Type名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Params<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Publish</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> EventFactoryName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> Params <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 推送</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeparam</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TEventFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeparam</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Params<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token generic-method"><span class="token function">Publish</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TEventFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> Params <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">TEventFactory</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IVampirewalCoreEventFactory</span></span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 并行推送</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>EventFactoryName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Params<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">PublishParallel</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> EventFactoryName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> Params <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 并行推送</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeparam</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TEventFactory<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeparam</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Params<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token generic-method"><span class="token function">PublishParallel</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TEventFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> Params <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">TEventFactory</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IVampirewalCoreEventFactory</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_1-2、vampirewalcore事件总线工厂接口实现" tabindex="-1"><a class="header-anchor" href="#_1-2、vampirewalcore事件总线工厂接口实现" aria-hidden="true">#</a> 1.2、VampirewalCore事件总线工厂接口实现</h2><details class="hint-container details"><summary>VampirewalCore事件总线工厂</summary><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// VampirewalCore事件总线工厂</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">internal</span> <span class="token keyword">class</span> <span class="token class-name">VampirewalCoreEventBusFactory</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IVampirewalCoreEventBusFactory</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">IServiceProvider</span> Service<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token return-type class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> Type<span class="token punctuation">&gt;</span></span> EventBusFactoryTypes <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">VampirewalCoreEventBusFactory</span><span class="token punctuation">(</span><span class="token class-name">IServiceProvider</span> provider<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        Service <span class="token operator">=</span> provider<span class="token punctuation">;</span>

        EventBusFactoryTypes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> Type<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">RegisterAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 注册全部</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Type<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">?</span></span> types <span class="token operator">=</span> AppDomain<span class="token punctuation">.</span>CurrentDomain<span class="token punctuation">.</span><span class="token function">GetAssemblies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SelectMany</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span><span class="token function">GetTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>t <span class="token operator">=&gt;</span> t<span class="token punctuation">.</span><span class="token function">GetInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">IVampirewalCoreEventFactory</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">Type</span> type <span class="token keyword">in</span> types<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                EventBusFactoryTypes<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Publish</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> EventFactoryName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> Params <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>EventBusFactoryTypes<span class="token punctuation">.</span><span class="token function">TryGetValue</span><span class="token punctuation">(</span>EventFactoryName<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name">Type</span> type<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> im <span class="token operator">=</span> Service<span class="token punctuation">.</span><span class="token function">GetService</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">IVampirewalCoreEventFactory</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>im <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">VampirewalCoreEventBusException</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;未找到类型为</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">type</span><span class="token punctuation">}</span></span><span class="token string">的事件工厂！&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//获取当前事件工厂内的所有标记了EventBusExcuteAttribute的方法</span>
            <span class="token class-name"><span class="token keyword">var</span></span> methods <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">GetMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>w <span class="token operator">=&gt;</span> w<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetCustomAttribute</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>EventBusExcuteAttribute<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>methods <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> methods<span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">VampirewalCoreEventBusException</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;该事件工厂中没有找到标记EventBusExcuteAttribute特性的方法！&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>methods <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                methods<span class="token punctuation">.</span><span class="token function">Sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> attr1 <span class="token operator">=</span> s1<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetCustomAttribute</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>EventBusExcuteAttribute<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> attr2 <span class="token operator">=</span> s2<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetCustomAttribute</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>EventBusExcuteAttribute<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">if</span> <span class="token punctuation">(</span>attr1<span class="token punctuation">.</span>ExcuteSort <span class="token operator">&gt;</span> attr2<span class="token punctuation">.</span>ExcuteSort<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">else</span>
                    <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">//new一个事件工厂上下文</span>
                <span class="token class-name">EventFactoryContext</span> FactoryContexts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">EventFactoryContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> sub <span class="token keyword">in</span> methods<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">//new一个事件上下文，方便传递数据</span>
                    <span class="token class-name">EventContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">EventContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        PassData <span class="token operator">=</span> Params<span class="token punctuation">,</span>
                        MethodName <span class="token operator">=</span> sub<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>
                        ExcutingTime <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now
                    <span class="token punctuation">}</span><span class="token punctuation">;</span>

                    <span class="token comment">//将事件上下文添加到事件工厂的上下文集合中</span>
                    FactoryContexts<span class="token punctuation">.</span>EventContexts<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//获取到当前方法上的AOP特性</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> attrs <span class="token operator">=</span> sub<span class="token punctuation">.</span><span class="token function">GetCustomAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>w <span class="token operator">=&gt;</span> w <span class="token keyword">is</span> <span class="token class-name">EventBusAOPAttribute</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">try</span>
                    <span class="token punctuation">{</span>
                        <span class="token comment">//循环执行AOP特性的执行前方法</span>
                        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">EventBusAOPAttribute</span> item <span class="token keyword">in</span> attrs<span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            item<span class="token punctuation">.</span><span class="token function">ExcuteBefore</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>

                        sub<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>im<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> context <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token comment">//捕获方法执行中的异常信息</span>
                        context<span class="token punctuation">.</span>ExceptionInfo <span class="token operator">=</span> ex<span class="token punctuation">.</span>InnerException<span class="token punctuation">;</span>
                        <span class="token comment">//将事件工厂的是否全部完成成功标记为false</span>
                        FactoryContexts<span class="token punctuation">.</span>IsEventFactoryComplateSuccess <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">finally</span>
                    <span class="token punctuation">{</span>
                        context<span class="token punctuation">.</span>ExcutedTime <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">;</span>
                        <span class="token comment">//循环执行AOP特性的执行后方法</span>
                        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">EventBusAOPAttribute</span> item <span class="token keyword">in</span> attrs<span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            item<span class="token punctuation">.</span><span class="token function">ExcuteAfter</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>

                        Params <span class="token operator">=</span> context<span class="token punctuation">.</span>PassData<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>

                <span class="token comment">//在事件工厂内的方法全部都执行完成之后，执行事件工厂的完成方法</span>
                im<span class="token punctuation">.</span><span class="token function">EventFactoryComplate</span><span class="token punctuation">(</span>FactoryContexts<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">VampirewalCoreEventBusException</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;未找到</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">EventFactoryName</span><span class="token punctuation">}</span></span><span class="token string">对应的事件工厂！&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token generic-method"><span class="token function">Publish</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TEventFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> Params <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">TEventFactory</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IVampirewalCoreEventFactory</span></span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Type</span> type <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">TEventFactory</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">Publish</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> Params<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">PublishParallel</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> EventFactoryName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> Params <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>EventBusFactoryTypes<span class="token punctuation">.</span><span class="token function">TryGetValue</span><span class="token punctuation">(</span>EventFactoryName<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name">Type</span> type<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> im <span class="token operator">=</span> Service<span class="token punctuation">.</span><span class="token function">GetService</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name">IVampirewalCoreEventFactory</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>im <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">VampirewalCoreEventBusException</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;未找到类型为</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">type</span><span class="token punctuation">}</span></span><span class="token string">的事件工厂！&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//获取当前事件工厂内的所有标记了EventBusExcuteAttribute的方法</span>
            <span class="token class-name"><span class="token keyword">var</span></span> methods <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">GetMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>w <span class="token operator">=&gt;</span> w<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetCustomAttribute</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>EventBusExcuteAttribute<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>methods <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> methods<span class="token punctuation">.</span><span class="token function">Count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">VampirewalCoreEventBusException</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;该事件工厂中没有找到标记EventBusExcuteAttribute特性的方法！&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>methods <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token comment">//new一个事件工厂上下文</span>
                <span class="token class-name">EventFactoryContext</span> FactoryContexts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">EventFactoryContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token comment">//这个foreach方法会并行执行，且会等待所有的方法执行完之后，再往下执行方法</span>
                <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> Parallel<span class="token punctuation">.</span><span class="token function">ForEach</span><span class="token punctuation">(</span>methods<span class="token punctuation">,</span> sub <span class="token operator">=&gt;</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">//new一个事件上下文，方便传递数据</span>
                    <span class="token class-name">EventContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">EventContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        PassData <span class="token operator">=</span> Params<span class="token punctuation">,</span>
                        MethodName <span class="token operator">=</span> sub<span class="token punctuation">.</span>Name<span class="token punctuation">,</span>
                        ExcutingTime <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now
                    <span class="token punctuation">}</span><span class="token punctuation">;</span>
                    <span class="token comment">//将事件上下文添加到事件工厂的上下文集合中</span>
                    FactoryContexts<span class="token punctuation">.</span>EventContexts<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//获取到当前方法上的AOP特性</span>
                    <span class="token class-name"><span class="token keyword">var</span></span> attrs <span class="token operator">=</span> sub<span class="token punctuation">.</span><span class="token function">GetCustomAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>w <span class="token operator">=&gt;</span> w <span class="token keyword">is</span> <span class="token class-name">EventBusAOPAttribute</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    <span class="token keyword">try</span>
                    <span class="token punctuation">{</span>
                        <span class="token comment">//循环执行AOP特性的执行前方法</span>
                        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">EventBusAOPAttribute</span> item <span class="token keyword">in</span> attrs<span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            item<span class="token punctuation">.</span><span class="token function">ExcuteBefore</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>

                        sub<span class="token punctuation">.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>im<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">object</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> context <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token comment">//捕获方法执行中的异常信息</span>
                        context<span class="token punctuation">.</span>ExceptionInfo <span class="token operator">=</span> ex<span class="token punctuation">.</span>InnerException<span class="token punctuation">;</span>
                        <span class="token comment">//将事件工厂的是否全部完成成功标记为false</span>
                        FactoryContexts<span class="token punctuation">.</span>IsEventFactoryComplateSuccess <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">finally</span>
                    <span class="token punctuation">{</span>
                        context<span class="token punctuation">.</span>ExcutedTime <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">;</span>
                        <span class="token comment">//循环执行AOP特性的执行后方法</span>
                        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">EventBusAOPAttribute</span> item <span class="token keyword">in</span> attrs<span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            item<span class="token punctuation">.</span><span class="token function">ExcuteAfter</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>IsCompleted<span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">//在事件工厂内的方法全部都执行完成之后，执行事件工厂的完成方法</span>
                    im<span class="token punctuation">.</span><span class="token function">EventFactoryComplate</span><span class="token punctuation">(</span>FactoryContexts<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">VampirewalCoreEventBusException</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;未找到</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">EventFactoryName</span><span class="token punctuation">}</span></span><span class="token string">对应的事件工厂！&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token generic-method"><span class="token function">PublishParallel</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TEventFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> Params <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">TEventFactory</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IVampirewalCoreEventFactory</span></span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Type</span> type <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">TEventFactory</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">PublishParallel</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> Params<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_1-3、事件工厂接口" tabindex="-1"><a class="header-anchor" href="#_1-3、事件工厂接口" aria-hidden="true">#</a> 1.3、事件工厂接口</h2><details class="hint-container details"><summary>事件工厂</summary><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 事件工厂</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IVampirewalCoreEventFactory</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 工厂名称(方便查找定位)</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token return-type class-name"><span class="token keyword">string</span></span> FactoryName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 事件工厂完成</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>context<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">EventFactoryComplate</span><span class="token punctuation">(</span><span class="token class-name">EventFactoryContext</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_1-4、事件工厂上下文" tabindex="-1"><a class="header-anchor" href="#_1-4、事件工厂上下文" aria-hidden="true">#</a> 1.4、事件工厂上下文</h2><details class="hint-container details"><summary>事件工厂上下文</summary><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// &lt;summary&gt;</span>
<span class="token doc-comment comment">/// 事件工厂上下文</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EventFactoryContext</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">EventFactoryContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        EventContexts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>EventContext<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        IsEventFactoryComplateSuccess<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 内部方法上下文</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>EventContext<span class="token punctuation">&gt;</span></span> EventContexts <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span><span class="token keyword">internal</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 事件工厂是否全部完成成功</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsEventFactoryComplateSuccess <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span><span class="token keyword">internal</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_1-5、事件上下文" tabindex="-1"><a class="header-anchor" href="#_1-5、事件上下文" aria-hidden="true">#</a> 1.5、事件上下文</h2><details class="hint-container details"><summary>事件上下文</summary><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 事件上下文</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EventContext</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 传递过来的参数</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">object</span><span class="token punctuation">?</span></span> PassData <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 执行的方法名</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> MethodName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">internal</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 开始执行时间</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> ExcutingTime <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">internal</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 执行结束时间</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> ExcutedTime <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">internal</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 异常信息</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Exception<span class="token punctuation">?</span></span> ExceptionInfo <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">internal</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_1-6、vampirewalcore事件总线异常类" tabindex="-1"><a class="header-anchor" href="#_1-6、vampirewalcore事件总线异常类" aria-hidden="true">#</a> 1.6、VampirewalCore事件总线异常类</h2><details class="hint-container details"><summary>VampirewalCore事件总线异常类</summary><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// VampirewalCore事件总线异常类</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">internal</span> <span class="token keyword">class</span> <span class="token class-name">VampirewalCoreEventBusException</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Exception</span></span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// VampirewalCore事件总线异常类</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ErrorMsg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>异常信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token function">VampirewalCoreEventBusException</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> ErrorMsg<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">base</span><span class="token punctuation">(</span>ErrorMsg<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_1-7、eventbusexcuteattribute-标记在事件总线中的方法才会执行" tabindex="-1"><a class="header-anchor" href="#_1-7、eventbusexcuteattribute-标记在事件总线中的方法才会执行" aria-hidden="true">#</a> 1.7、EventBusExcuteAttribute，标记在事件总线中的方法才会执行</h2><details class="hint-container details"><summary>标记在事件总线中的方法才会执行</summary><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 标记在事件总线中的方法才会执行</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">[</span><span class="token function">AttributeUsage</span><span class="token punctuation">(</span>AttributeTargets<span class="token punctuation">.</span>Method<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">EventBusExcuteAttribute</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Attribute</span></span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 执行顺序</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> ExcuteSort <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token number">99</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_1-8、eventbusaopattribute-事件工厂aop特性-需继承" tabindex="-1"><a class="header-anchor" href="#_1-8、eventbusaopattribute-事件工厂aop特性-需继承" aria-hidden="true">#</a> 1.8、EventBusAOPAttribute，事件工厂AOP特性，需继承</h2><details class="hint-container details"><summary>事件工厂AOP特性，需继承</summary><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 事件工厂AOP特性，需继承</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">[</span><span class="token function">AttributeUsage</span><span class="token punctuation">(</span>AttributeTargets<span class="token punctuation">.</span>Method<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">EventBusAOPAttribute</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Attribute</span></span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 方法执行前</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>context<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>上下文<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ExcuteBefore</span><span class="token punctuation">(</span><span class="token class-name">EventContext</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 方法执行后</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>context<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>上下文<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ExcuteAfter</span><span class="token punctuation">(</span><span class="token class-name">EventContext</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_1-9、vampirewalcoreeventbusextension-扩展" tabindex="-1"><a class="header-anchor" href="#_1-9、vampirewalcoreeventbusextension-扩展" aria-hidden="true">#</a> 1.9、VampirewalCoreEventBusExtension，扩展</h2><details class="hint-container details"><summary>事件总线扩展</summary><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">///</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">VampirewalCoreEventBusExtension</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 将事件总线工厂注册到IoC中</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>services<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">AddVampirewalCoreEventBusFactory</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IServiceCollection</span> services<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Type<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">?</span></span> types <span class="token operator">=</span> AppDomain<span class="token punctuation">.</span>CurrentDomain<span class="token punctuation">.</span><span class="token function">GetAssemblies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">SelectMany</span><span class="token punctuation">(</span>a <span class="token operator">=&gt;</span> a<span class="token punctuation">.</span><span class="token function">GetTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>t <span class="token operator">=&gt;</span> t<span class="token punctuation">.</span><span class="token function">GetInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">IVampirewalCoreEventFactory</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">AddVampirewalCoreEventBusFactory</span><span class="token punctuation">(</span>services<span class="token punctuation">,</span> factory <span class="token operator">=&gt;</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> type <span class="token keyword">in</span> types<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                factory<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 如果事件工厂放在其他项目内，可能自动全部加载的方式无法获取到，可通过这个方法加载</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>services<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>eventFactorys<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">AddVampirewalCoreEventBusFactory</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IServiceCollection</span> services<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span>Type<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> eventFactorys<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">List<span class="token punctuation">&lt;</span>Type<span class="token punctuation">&gt;</span></span> types <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>Type<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        eventFactorys<span class="token punctuation">?.</span><span class="token function">Invoke</span><span class="token punctuation">(</span>types<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name">Type</span> type <span class="token keyword">in</span> types<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token comment">//var methods = type.GetMethods(BindingFlags.Public);</span>
                <span class="token class-name"><span class="token keyword">var</span></span> ErrorMethods <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">GetMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                                  <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>w <span class="token operator">=&gt;</span> w<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetCustomAttribute</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>EventBusExcuteAttribute<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>w<span class="token punctuation">.</span><span class="token function">GetParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Length <span class="token operator">!=</span> <span class="token number">1</span> <span class="token operator">||</span> w<span class="token punctuation">.</span><span class="token function">GetParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ParameterType <span class="token operator">!=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">EventContext</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                                                  <span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>s <span class="token operator">=&gt;</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">type<span class="token punctuation">.</span>Name</span><span class="token punctuation">}</span></span><span class="token string">事件工厂内的</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">s<span class="token punctuation">.</span>Name</span><span class="token punctuation">}</span></span><span class="token string">方法参数数量不等于1或参数类型不是EventContext！请修改！&quot;</span></span><span class="token punctuation">)</span>
                                                  <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>ErrorMethods <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> ErrorMethods<span class="token punctuation">.</span>Count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">VampirewalCoreEventBusException</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">,</span> ErrorMethods<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">//注册事件工厂</span>
                services<span class="token punctuation">.</span><span class="token function">AddSingleton</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//注册事件总线工厂</span>
        services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">AddSingleton</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IVampirewalCoreEventBusFactory<span class="token punctuation">,</span> VampirewalCoreEventBusFactory<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h1 id="_2、如何使用" tabindex="-1"><a class="header-anchor" href="#_2、如何使用" aria-hidden="true">#</a> 2、如何使用</h1><h2 id="_2-1、将eventbusfactory注册进iservicecollection" tabindex="-1"><a class="header-anchor" href="#_2-1、将eventbusfactory注册进iservicecollection" aria-hidden="true">#</a> 2.1、将EventBusFactory注册进IServiceCollection</h2><blockquote><p>因为在上文的代码中，已经将我们的EventBusFactory使用单例注册进了IServiceCollection，之后在使用的时候，就可以通过构造函数注入的方式，直接在其他模块使用</p></blockquote><h3 id="_2-1-1-注册进vampirewal-admin中" tabindex="-1"><a class="header-anchor" href="#_2-1-1-注册进vampirewal-admin中" aria-hidden="true">#</a> 2.1.1 注册进Vampirewal.Admin中</h3><details class="hint-container details"><summary>测试</summary><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestBootStartUp</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">VampirewalBootStartUp</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> FirstViewKey <span class="token operator">=&gt;</span> <span class="token string">&quot;MainView&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RegisterService</span><span class="token punctuation">(</span><span class="token class-name">IServiceCollection</span> services<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
       <span class="token comment">//篇幅有限，此处进展示这里</span>
        services<span class="token punctuation">.</span><span class="token function">AddVampirewalCoreEventBusFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="_2-1-2-注册进其他iservicecollection" tabindex="-1"><a class="header-anchor" href="#_2-1-2-注册进其他iservicecollection" aria-hidden="true">#</a> 2.1.2 注册进其他IServiceCollection</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>services<span class="token punctuation">.</span><span class="token function">AddVampirewalCoreEventBusFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-2、使用" tabindex="-1"><a class="header-anchor" href="#_2-2、使用" aria-hidden="true">#</a> 2.2、使用</h2><h3 id="_2-2-1、代码准备" tabindex="-1"><a class="header-anchor" href="#_2-2-1、代码准备" aria-hidden="true">#</a> 2.2.1、代码准备</h3><details class="hint-container details"><summary>新增事件工厂</summary><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestEventBus</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IVampirewalCoreEventFactory</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">TestEventBus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//此处构造函数中并没有其他参数，实际因为当前事件工厂已经被注册到了IServiceCollection中，所以其他被注册为单例的服务，可以在这里通过构造函数传进来</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> FactoryName <span class="token operator">=&gt;</span> <span class="token string">&quot;测试用&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">EventFactoryComplate</span><span class="token punctuation">(</span><span class="token class-name">EventFactoryContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">EventBusExcute</span><span class="token attribute-arguments"><span class="token punctuation">(</span>ExcuteSort <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TestEvent111111</span><span class="token punctuation">(</span><span class="token class-name">EventContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        context<span class="token punctuation">.</span>PassData <span class="token operator">=</span> <span class="token string">&quot;已修改2&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">TestEventBusAop</span></span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">EventBusExcute</span><span class="token attribute-arguments"><span class="token punctuation">(</span>ExcuteSort <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TestEvent2222222</span><span class="token punctuation">(</span><span class="token class-name">EventContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//throw new Exception(&quot;test&quot;);</span>
        context<span class="token punctuation">.</span>PassData <span class="token operator">=</span> <span class="token string">&quot;已修改1&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">EventBusExcute</span><span class="token attribute-arguments"><span class="token punctuation">(</span>ExcuteSort <span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">haha123</span><span class="token punctuation">(</span><span class="token class-name">EventContext</span> context123<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        context123<span class="token punctuation">.</span>PassData <span class="token operator">=</span> <span class="token string">&quot;已修改&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">//该类为AOP使用</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestEventBusAopAttribute</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">EventBusAOPAttribute</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ExcuteAfter</span><span class="token punctuation">(</span><span class="token class-name">EventContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ExcuteBefore</span><span class="token punctuation">(</span><span class="token class-name">EventContext</span> context<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="_2-2-2、代码说明" tabindex="-1"><a class="header-anchor" href="#_2-2-2、代码说明" aria-hidden="true">#</a> 2.2.2、代码说明</h3><p><kbd>[EventBusExcute(ExcuteSort =1)]</kbd>该特性的标记有2个作用 : 1、接收到消息之后，有这个特性的方法才会执行 : 2、使用PublishParallel推送的消息，并不会管ExcuteSort，只有Publish推送，会根据ExcuteSort进行排序，顺序执行</p><p><kbd>[TestEventBusAop]</kbd>AOP特性 : 此处的AOP特性并不限一个，从上文的代码中可以看到，是根据标记在方法上的AOP数量进行顺序执行，可在方法上叠加多种AOP特性，仅需多次继承EventBusAOPAttribute并重写方法即可</p><h3 id="_2-2-3、调用" tabindex="-1"><a class="header-anchor" href="#_2-2-3、调用" aria-hidden="true">#</a> 2.2.3、调用</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainViewModel</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">MainViewModel</span><span class="token punctuation">(</span><span class="token class-name">IVampirewalCoreEventBusFactory</span> factory<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        factory<span class="token punctuation">.</span><span class="token function">Publish</span><span class="token punctuation">(</span><span class="token string">&quot;TestEventBus&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        factory<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Publish</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TestEventBus<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        factory<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">PublishParallel</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TestEventBus<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        factory<span class="token punctuation">.</span><span class="token function">PublishParallel</span><span class="token punctuation">(</span><span class="token string">&quot;TestEventBus&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello World&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h1><blockquote><p>以上就是我这边构思的事件总线全部内容，请大家指正 总体来看，和能搜索出来的主流EventBus有点不一样，就是我这里并没有将订阅者标记到某一个方法上，而是通过一个事件工厂的方式，通篇执行完这个工厂内的所有有标记的方法。这个也是业务需要导致的，抛砖引玉吧。 大家有更好的想法可以一起交流哈</p></blockquote>`,41);function d(m,v){const a=l("ExternalLinkIcon");return p(),e("div",null,[u,n("blockquote",null,[n("p",null,[s("前言： 因为我自己写的一个WPF前后端系统，会涉及到接收某个消息之后，针对这个动作会执行一些其他的数据操作等，为了程序的解耦，写了个简单的事件总线来管理。 插播一条广告： Gitee仓库:"),n("a",k,[s("Vampirewal.Admin"),c(a)]),s("欢迎大家Start 该事件总线我也打包成Nuget包了，地址：NuGet\\Install-Package Vampirewal.Core.EventBus -Version 1.0.0.9")])]),r])}const y=t(i,[["render",d],["__file","EventBus.html.vue"]]);export{y as default};
