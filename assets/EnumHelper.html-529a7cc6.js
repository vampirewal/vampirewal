import{_ as n,W as s,X as a,a1 as t}from"./framework-b2028a60.js";const p={},e=t(`<div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li>该类仅提供2个方法</li></ul><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>GetDisplay</td><td>获取标记在枚举上的DisplayAttribute中的Name值</td></tr><tr><td>EnumToList</td><td>将Enum转成List</td></tr></tbody></table></div><h2 id="如何使用" tabindex="-1"><a class="header-anchor" href="#如何使用" aria-hidden="true">#</a> 如何使用</h2><h3 id="_1、准备一个枚举" tabindex="-1"><a class="header-anchor" href="#_1、准备一个枚举" aria-hidden="true">#</a> 1、准备一个枚举</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// GeneralListView界面上的按钮</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">ListViewButton</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 新增</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token punctuation">[</span><span class="token function">Display</span><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;新增&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SetClassification</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    Add<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 编辑</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token punctuation">[</span><span class="token function">Display</span><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;编辑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SetClassification</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    Edit <span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 删除</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token punctuation">[</span><span class="token function">Display</span><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;删除&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SetClassification</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    Delete <span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 导出</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token punctuation">[</span><span class="token function">Display</span><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;导出&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SetClassification</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    Export <span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token doc-comment comment">/// 导入</span>
    <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
    <span class="token punctuation">[</span><span class="token function">Display</span><span class="token punctuation">(</span>Name <span class="token operator">=</span> <span class="token string">&quot;导入&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">SetClassification</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Type <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
    Import <span class="token operator">=</span><span class="token number">4</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">SetClassificationAttribute</p><ul><li>上文的代码中，针对枚举标记了一个SetClassificationAttribute特性</li><li>该特性的作用是在EnumToList的时候，为转成List之后设置一个值，用在WPF的ComboBox控件中</li></ul></div><h3 id="_2、使用" tabindex="-1"><a class="header-anchor" href="#_2、使用" aria-hidden="true">#</a> 2、使用</h3><h3 id="_2-1、viewmodel中使用" tabindex="-1"><a class="header-anchor" href="#_2-1、viewmodel中使用" aria-hidden="true">#</a> 2.1、ViewModel中使用</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">private</span> <span class="token class-name">List<span class="token punctuation">&lt;</span>EnumberCreditType<span class="token punctuation">&gt;</span></span> _ListViewButton<span class="token punctuation">;</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// </span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span>EnumberCreditType<span class="token punctuation">&gt;</span></span> ListViewButtonList
<span class="token punctuation">{</span>
    <span class="token keyword">get</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> _ListViewButton<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">set</span>
    <span class="token punctuation">{</span>
        _ListViewButton <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span>
        <span class="token function">OnPropertyChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">int</span></span> _SelectedValue<span class="token punctuation">;</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// 已选择的模块</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> SelectedValue
<span class="token punctuation">{</span>
    <span class="token keyword">get</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> _SelectedValue<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">set</span> <span class="token punctuation">{</span> _SelectedValue <span class="token operator">=</span> <span class="token keyword">value</span><span class="token punctuation">;</span> <span class="token function">OnPropertyChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token keyword">public</span> <span class="token function">MainViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//显示SetClassificationAttribute编号0-3的值</span>
    ListViewButtonList <span class="token operator">=</span> EnumHelper<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EnumToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ListViewButton<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>Classification <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>Classification <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>Classification<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//显示SetClassificationAttribute编号0-4的值</span>
    ListViewButtonList <span class="token operator">=</span> EnumHelper<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EnumToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ListViewButton<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>Classification <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>Classification <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>Classification<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//显示SetClassificationAttribute编号2-4的值</span>
    ListViewButtonList <span class="token operator">=</span> EnumHelper<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">EnumToList</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>ListViewButton<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>Classification <span class="token operator">&gt;=</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>Classification <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>e <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>Classification<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2、xaml中使用" tabindex="-1"><a class="header-anchor" href="#_2-2、xaml中使用" aria-hidden="true">#</a> 2.2、XAML中使用</h3><div class="language-xaml line-numbers-mode" data-ext="xaml"><pre class="language-xaml"><code>&lt;ComboBox
    Width=&quot;250&quot;
    DisplayMemberPath=&quot;Name&quot;
    ItemsSource=&quot;{Binding ListViewButtonList}&quot;
    SelectedValue=&quot;{Binding SelectedValue}&quot;
    SelectedValuePath=&quot;Value&quot; /&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","EnumHelper.html.vue"]]);export{k as default};
